from pathlib import Path
from datetime import date
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π —à—Ä–∏—Ñ—Ç
FONT_PATH = Path("fonts/DejaVuSans.ttf")
pdfmetrics.registerFont(TTFont("DejaVu", str(FONT_PATH)))

def generate_checklist_pdf(username: str, tasks: list[str], filename: str = "checklist.pdf") -> str:
    path = Path("assets/pdf") / filename
    path.parent.mkdir(parents=True, exist_ok=True)  # –°–æ–∑–¥–∞—ë—Ç –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    c = canvas.Canvas(str(path), pagesize=A4)

    c.setFont("DejaVu", 16)
    c.drawString(100, 800, "–ß–µ–∫-–ª–∏—Å—Ç –æ—Ç –¢–∏–º–º–∏ üß∏")

    c.setFont("DejaVu", 12)
    c.drawString(100, 780, f"{username}, –≤–æ—Ç –∑–∞–¥–∞–Ω–∏—è –Ω–∞ {date.today().strftime('%d.%m.%Y')}:")

    y = 750
    for i, task in enumerate(tasks, 1):
        c.drawString(100, y, f"[ ] {i}. {task}")
        y -= 25
        if y < 100:
            c.showPage()
            c.setFont("DejaVu", 12)
            y = 800

    c.setFont("DejaVu", 10)
    c.drawString(100, 100, "–û—Ç–º–µ—á–∞–π –≥–∞–ª–æ—á–∫–∞–º–∏, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–∏–ª üñçÔ∏è")
    c.save()
    return str(path)
