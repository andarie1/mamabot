from aiogram import Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, FSInputFile

from services.ai_generator import generate_ai_lesson
from services.progress_report import generate_progress_report
from services.user_profile import get_trial_status, get_user_age_range

from handlers.start import start_handler

router = Router()

# === –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ ===
async def check_trial_and_inform(message: types.Message) -> bool:
    status = get_trial_status(message.from_user.id)
    if status == "almost_over":
        await message.answer(
            "‚è≥ –í–∞—à –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∑–∞–≤—Ç—Ä–∞! –ß—Ç–æ–±—ã –∏ –¥–∞–ª—å—à–µ –ø–æ–ª—É—á–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è, –æ—Ç–∫—Ä–æ–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É üí≥."
        )
    if status == "expired":
        await message.answer(
            "üö´ –í–∞—à –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞–≤–µ—Ä—à—ë–Ω. –î–æ—Å—Ç—É–ø –∫ –æ–±—É—á–µ–Ω–∏—é –∑–∞–∫—Ä—ã—Ç. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚Äî –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É."
        )
        return False
    return True

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ–±—É—á–µ–Ω–∏—è ===
@router.message(lambda msg: msg.text == "üìö –û–±—É—á–µ–Ω–∏–µ")
async def show_education_menu(message: types.Message):
    if not await check_trial_and_inform(message):
        return

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üî¢ –í—ã–±—Ä–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–±—ë–Ω–∫–∞")],
            [KeyboardButton(text="üìò –¢–µ–º—ã –∏ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")],
            [KeyboardButton(text="üì∑ –†–∞–∑–≤–∏–≤–∞—é—â–∏–µ —É—Ä–æ–∫–∏ (AI)")],
            [KeyboardButton(text="üìà –ü—Ä–æ–≥—Ä–µ—Å—Å")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    await message.answer("üìã –ú–µ–Ω—é –æ–±—É—á–µ–Ω–∏—è. –í—ã–±–µ—Ä–∏, —á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ:", reply_markup=keyboard)

# === –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ ===
@router.message(lambda msg: msg.text == "üî¢ –í—ã–±—Ä–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–±—ë–Ω–∫–∞")
async def choose_age_menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="0‚Äì2 –≥–æ–¥–∞"), KeyboardButton(text="2‚Äì4 –≥–æ–¥–∞"), KeyboardButton(text="4‚Äì6 –ª–µ—Ç")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –æ–±—É—á–µ–Ω–∏–µ")]
        ],
        resize_keyboard=True
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–±—ë–Ω–∫–∞ –∫–Ω–æ–ø–∫–æ–π üëá", reply_markup=keyboard)

# === –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ ===
@router.message(lambda msg: msg.text in {"0‚Äì2 –≥–æ–¥–∞", "2‚Äì4 –≥–æ–¥–∞", "4‚Äì6 –ª–µ—Ç"})
async def confirm_user_age_buttons(message: types.Message):
    from services.user_profile import save_user_age_range
    save_user_age_range(message.from_user.id, message.text)
    await message.answer(f"‚úÖ –í–æ–∑—Ä–∞—Å—Ç –≤—ã–±—Ä–∞–Ω: {message.text}. –¢–µ–ø–µ—Ä—å –∑–∞–¥–∞–Ω–∏—è –±—É–¥—É—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã! üß†")

# === –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –∏ —É—Ä–æ–≤–Ω—è ===
@router.message(lambda msg: msg.text == "üìò –¢–µ–º—ã –∏ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
async def choose_topic_and_level(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üé® –ê—Ä—Ç"), KeyboardButton(text="üß© –õ–æ–≥–∏–∫–∞")],
            [KeyboardButton(text="üî§ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π"), KeyboardButton(text="üéß –°–ª—É—à–∞–µ–º")],
            [KeyboardButton(text="üé≤ –ò–≥—Ä—ã"), KeyboardButton(text="üåà –û–±—â–∏–µ")],
            [KeyboardButton(text="‚≠ê –õ—ë–≥–∫–∏–π"), KeyboardButton(text="üî• –°–ª–æ–∂–Ω—ã–π")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –æ–±—É—á–µ–Ω–∏–µ")]
        ],
        resize_keyboard=True
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –∏ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:", reply_markup=keyboard)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏—Ö —É—Ä–æ–∫–æ–≤ ===
@router.message(lambda msg: msg.text == "üì∑ –†–∞–∑–≤–∏–≤–∞—é—â–∏–µ —É—Ä–æ–∫–∏ (AI)")
async def ai_lessons_handler(message: types.Message):
    if not await check_trial_and_inform(message):
        return

    from services.user_profile import get_user_age_range
    from aiogram.fsm.context import FSMContext

    age_range = get_user_age_range(message.from_user.id) or "2‚Äì4 –≥–æ–¥–∞"
    # –î–ª—è MVP –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Ç–µ–º–∞ "–æ–±—â–∏–µ", —É—Ä–æ–≤–µ–Ω—å "–Ω–∞—á–∞–ª—å–Ω—ã–π"
    topic = "–æ–±—â–∏–µ"
    level = "–Ω–∞—á–∞–ª—å–Ω—ã–π"

    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é AI-–∑–∞–¥–∞–Ω–∏–µ... –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ, –¢–∏–º–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç üß†")
    try:
        task = generate_ai_lesson(user_id=message.from_user.id, age_range=age_range, level=level, topic=topic)
        await message.answer(f"üß∏ –í–æ—Ç —Ç–≤–æ—ë AI-–∑–∞–¥–∞–Ω–∏–µ:{task}")
    except Exception as e:
        await message.answer("‚ùå –£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∑–∞–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        raise e

# === –û—Ç—á—ë—Ç –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ ===
@router.message(lambda msg: msg.text == "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å")
async def progress_shortcut_handler(message: types.Message):
    pdf_path = generate_progress_report(message.from_user.id, message.from_user.first_name)
    if pdf_path:
        await message.answer_document(FSInputFile(pdf_path), caption="üìä –í–æ—Ç —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å!")
    else:
        await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á—ë—Ç–∞ üòî")

# === –ù–∞–∑–∞–¥ ===
@router.message(lambda msg: msg.text == "üîô –ù–∞–∑–∞–¥ –≤ –æ–±—É—á–µ–Ω–∏–µ")
async def back_to_education_menu(message: types.Message):
    await show_education_menu(message)

@router.message(lambda msg: msg.text == "üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def go_back_to_main(message: types.Message):
    await start_handler(message)
