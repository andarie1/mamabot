from aiogram import Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from handlers.start import start_handler
from services.ai_generator import generate_ai_lesson

router = Router()

@router.message(lambda msg: msg.text == "üóÇ –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
async def show_materials_menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üó£ –°–æ–≤–µ—Ç –ª–æ–≥–æ–ø–µ–¥–∞"), KeyboardButton(text="üß† –°–æ–≤–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∞")],
            [KeyboardButton(text="üë®‚Äç‚öïÔ∏è –°–æ–≤–µ—Ç –ø–µ–¥–∏–∞—Ç—Ä–∞")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    await message.answer(
        "üóÇ –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç üëá",
        reply_markup=keyboard
    )

@router.message(lambda msg: msg.text == "üó£ –°–æ–≤–µ—Ç –ª–æ–≥–æ–ø–µ–¥–∞")
async def speech_therapist_tip(message: types.Message):
    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–æ–≤–µ—Ç –æ—Ç –ª–æ–≥–æ–ø–µ–¥–∞...")
    try:
        tip = generate_ai_lesson(user_id=message.from_user.id, topic="–ª–æ–≥–æ–ø–µ–¥")
        await message.answer(f"üó£ –°–æ–≤–µ—Ç –ª–æ–≥–æ–ø–µ–¥–∞:\n\n{tip}")
    except Exception as e:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        raise e

@router.message(lambda msg: msg.text == "üß† –°–æ–≤–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∞")
async def psychologist_tip(message: types.Message):
    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–æ–≤–µ—Ç –æ—Ç –¥–µ—Ç—Å–∫–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∞...")
    try:
        tip = generate_ai_lesson(user_id=message.from_user.id, topic="–ø—Å–∏—Ö–æ–ª–æ–≥")
        await message.answer(f"üß† –°–æ–≤–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∞:\n\n{tip}")
    except Exception as e:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        raise e

@router.message(lambda msg: msg.text == "üë®‚Äç‚öïÔ∏è –°–æ–≤–µ—Ç –ø–µ–¥–∏–∞—Ç—Ä–∞")
async def pediatrician_tip(message: types.Message):
    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–æ–≤–µ—Ç –æ—Ç –ø–µ–¥–∏–∞—Ç—Ä–∞...")
    try:
        tip = generate_ai_lesson(user_id=message.from_user.id, topic="–ø–µ–¥–∏–∞—Ç—Ä")
        await message.answer(f"üë®‚Äç‚öïÔ∏è –°–æ–≤–µ—Ç –ø–µ–¥–∏–∞—Ç—Ä–∞:\n\n{tip}")
    except Exception as e:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        raise e

@router.message(lambda msg: msg.text == "üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def go_back_to_main(message: types.Message):
    await start_handler(message)
