from aiogram import Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from handlers.start import start_handler
from services.gpt_lesson_generator import generate_ai_lesson
from services.user_profile import get_user_age

router = Router()

@router.message(lambda msg: msg.text == "üìñ –°–æ–≤–µ—Ç—ã –æ—Ç –ø—Ä–æ—Ñ–∏")
async def show_tips_menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üí° –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    await message.answer(
        "üìñ –°–æ–≤–µ—Ç—ã –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é, –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—é –∏ —É—Ö–æ–¥—É –∑–∞ —Ä–µ–±—ë–Ω–∫–æ–º.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá",
        reply_markup=keyboard
    )

@router.message(lambda msg: msg.text == "üí° –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç")
async def get_tip_handler(message: types.Message):
    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç –¥–ª—è –≤–∞—Å...")
    try:
        age = get_user_age(message.from_user.id) or 1
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º gpt_lesson_generator —Å —Ç–µ–º–æ–π "—Å–æ–≤–µ—Ç", —á—Ç–æ–±—ã AI –¥–∞–ª —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç—É —Å–æ–≤–µ—Ç
        tip = generate_ai_lesson(user_id=message.from_user.id, age=age, topic="—Å–æ–≤–µ—Ç")
        await message.answer(f"üß† –í–æ—Ç —Å–æ–≤–µ—Ç –æ—Ç –¢–∏–º–º–∏:\n\n{tip}")
    except Exception as e:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        raise e

@router.message(lambda msg: msg.text == "üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def go_back_to_main(message: types.Message):
    await start_handler(message)
