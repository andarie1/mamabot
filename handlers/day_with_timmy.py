from aiogram import Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from services.user_profile import get_user_age
from services.ai_generator import generate_ai_lesson
from services.progress_tracker import update_progress

router = Router()

@router.message(lambda msg: msg.text == "üìÖ –î–µ–Ω—å —Å –¢–∏–º–º–∏")
async def day_with_timmy_handler(message: types.Message):
    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –¥–ª—è —Ç–≤–æ–µ–≥–æ –º–∞–ª—ã—à–∞... –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ üß∏")

    try:
        age = get_user_age(message.from_user.id)
        if age is None:
            await message.answer("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–±—ë–Ω–∫–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ –û–±—É—á–µ–Ω–∏–µ ‚Üí üî¢ –ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–º.")
            return

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è AI-–∫–æ–º–ø–ª–µ–∫—Ç–∞
        task = generate_ai_lesson(message.from_user.id, age=age, topic="–æ–±—â–∏–µ")
        ritual = generate_ai_lesson(message.from_user.id, age=age, topic="—Ä–∏—Ç—É–∞–ª")
        advice = generate_ai_lesson(message.from_user.id, age=age, topic="—Å–æ–≤–µ—Ç")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        await message.answer(
            f"üìÖ <b>–¢–≤–æ–π –î–µ–Ω—å —Å –¢–∏–º–º–∏:</b>\n\n"
            f"üìù <b>–ó–∞–¥–∞–Ω–∏–µ:</b>\n{task}\n\n"
            f"üí§ <b>–†–∏—Ç—É–∞–ª:</b>\n{ritual}\n\n"
            f"üß† <b>–°–æ–≤–µ—Ç:</b>\n{advice}",
            parse_mode="HTML"
        )

        update_progress(message.from_user.id, "–î–µ–Ω—å —Å –¢–∏–º–º–∏")
    except Exception as e:
        await message.answer("‚ùå –£–ø—Å! –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø–ª–µ–∫—Ç. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        raise e
