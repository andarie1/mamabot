from aiogram import Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from handlers.start import start_handler
from services.progress_tracker import get_progress

router = Router()

@router.message(lambda msg: msg.text == "üîñ –ù–µ–¥–∞–≤–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ")
async def show_recent_menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    progress = get_progress(message.from_user.id)
    if not progress:
        await message.answer(
            "üîñ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –Ω–µ–¥–∞–≤–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.\n"
            "–ù–∞—á–Ω–∏ —Å –∑–∞–¥–∞–Ω–∏—è –∏–ª–∏ —Å–æ–≤–µ—Ç–∞, –∏ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å!",
            reply_markup=keyboard
        )
    else:
        recent = progress[-3:]
        text = "\n".join([f"‚Äî {entry['activity']} ({entry['timestamp']})" for entry in recent])
        await message.answer(
            f"üîñ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:\n{text}",
            reply_markup=keyboard
        )

@router.message(lambda msg: msg.text == "üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def go_back_to_main(message: types.Message):
    await start_handler(message)
