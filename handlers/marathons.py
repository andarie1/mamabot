from aiogram import Router, types, F
from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton,
    CallbackQuery
)
import os

from services.user_profile import (
    has_full_access,
    get_user_age_range,
    save_user_age_range
)
from services.payments_fondy import create_payment_link

router = Router()

# ===== –ü—ç–π–≤–æ–ª–ª-—Ç–µ–∫—Å—Ç =====
PAYWALL_MSG = (
    "üîí –†–∞–∑–¥–µ–ª ¬´–ú–∞—Ä–∞—Ñ–æ–Ω—ã –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤—ã¬ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ.\n\n"
    "–ü–æ–∫–∞ –º—ã –≥–æ—Ç–æ–≤–∏–º –æ–ø–ª–∞—Ç—É, —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –∑–∞–∫—Ä—ã—Ç. "
    "–¢—ã –º–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏: ¬´üìÖ –î–µ–Ω—å —Å –¢–∏–º–º–∏¬ª, ¬´üìö –û–±—É—á–µ–Ω–∏–µ¬ª, "
    "¬´üí° –°–æ–≤–µ—Ç—ã –æ—Ç –ø—Ä–æ—Ñ–∏¬ª, ¬´üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å¬ª, ¬´üîñ –ù–µ–¥–∞–≤–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ¬ª.\n\n"
    "–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ä–∞—Ñ–æ–Ω–∞–º, –æ—Ñ–æ—Ä–º–∏ –ø–æ–¥–ø–∏—Å–∫—É üëá"
)

# ===== –¢–∞—Ä–∏—Ñ—ã (EUR) –∏–∑ .env —Å –¥–µ—Ñ–æ–ª—Ç–∞–º–∏ =====
SUB_MONTH_EUR   = float(os.getenv("SUB_MONTH_EUR",   "4.99"))
SUB_QUARTER_EUR = float(os.getenv("SUB_QUARTER_EUR", "12.99"))
SUB_YEAR_EUR    = float(os.getenv("SUB_YEAR_EUR",    "39.99"))
SUB_DESC        = os.getenv("SUB_DESC", "–î–æ—Å—Ç—É–ø –∫ —Ä–∞–∑–¥–µ–ª—É ¬´–ú–∞—Ä–∞—Ñ–æ–Ω—ã –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤—ã¬ª")

PLANS = {
    "month":   {"title": "1 –º–µ—Å—è—Ü",    "amount": SUB_MONTH_EUR},
    "quarter": {"title": "3 –º–µ—Å—è—Ü–∞",   "amount": SUB_QUARTER_EUR},
    "year":    {"title": "12 –º–µ—Å—è—Ü–µ–≤", "amount": SUB_YEAR_EUR},
}

AGE_CHOICES = ["0‚Äì2 –≥–æ–¥–∞", "2‚Äì4 –≥–æ–¥–∞", "4‚Äì6 –ª–µ—Ç"]

# ===== –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã =====
def get_age_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=age)] for age in AGE_CHOICES] + [[KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]],
        resize_keyboard=True
    )

def get_marathon_menu_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üéØ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–∞–¥–∏–∫—É"), KeyboardButton(text="‚úè –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

def paywall_keyboard() -> InlineKeyboardMarkup:
    # —Ç—Ä–∏ inline‚Äë–∫–Ω–æ–ø–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f"üí≥ {PLANS['month']['title']} ‚Ä¢ {PLANS['month']['amount']:.2f} EUR",
                              callback_data="mr_pay:month")],
        [InlineKeyboardButton(text=f"üí≥ {PLANS['quarter']['title']} ‚Ä¢ {PLANS['quarter']['amount']:.2f} EUR",
                              callback_data="mr_pay:quarter")],
        [InlineKeyboardButton(text=f"üí≥ {PLANS['year']['title']} ‚Ä¢ {PLANS['year']['amount']:.2f} EUR",
                              callback_data="mr_pay:year")],
    ])

# ===== –í—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª =====
@router.message(F.text == "üöÄ –ú–∞—Ä–∞—Ñ–æ–Ω—ã –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤—ã")
async def show_marathons_menu(message: types.Message):
    user_id = message.from_user.id
    age = get_user_age_range(user_id)

    if not age:
        await message.answer(
            "üë∂ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–±—ë–Ω–∫–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã:",
            reply_markup=get_age_keyboard()
        )
        return

    # –ü—ç–π–≤–æ–ª–ª: –Ω–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É + —Ç–∞—Ä–∏—Ñ—ã
    if not has_full_access(user_id):
        await message.answer(PAYWALL_MSG, reply_markup=paywall_keyboard())
        return

    await message.answer(
        "üöÄ –ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤—ã.\n\n–í—ã–±–µ—Ä–∏ –º–∞—Ä–∞—Ñ–æ–Ω:",
        reply_markup=get_marathon_menu_keyboard()
    )

# ===== –í—ã–±–æ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞ =====
@router.message(F.text.in_(AGE_CHOICES))
async def handle_age_selection(message: types.Message):
    save_user_age_range(message.from_user.id, message.text)
    await message.answer("‚úÖ –í–æ–∑—Ä–∞—Å—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
    await show_marathons_menu(message)

# ===== –ö–æ–Ω—Ç–µ–Ω—Ç –º–∞—Ä–∞—Ñ–æ–Ω–æ–≤ (–¥–ª—è —Ç–µ—Ö, —É –∫–æ–≥–æ –¥–æ—Å—Ç—É–ø –µ—Å—Ç—å) =====
@router.message(F.text.in_({"üéØ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–∞–¥–∏–∫—É", "‚úè –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ"}))
async def marathon_content_handler(message: types.Message):
    user_id = message.from_user.id

    if not has_full_access(user_id):
        await message.answer(PAYWALL_MSG, reply_markup=paywall_keyboard())
        return

    await message.answer(
        f"‚úÖ –î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç! üéâ\n\n"
        f"–ù–∞—á–∏–Ω–∞–π –º–∞—Ä–∞—Ñ–æ–Ω: {message.text}.\n"
        f"–ó–∞–¥–∞–Ω–∏—è –∏ —Ç—Ä–µ–∫–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –∑–¥–µ—Å—å."
    )

# ===== –û–ø–ª–∞—Ç–∞: inline‚Äë–∫–Ω–æ–ø–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ =====
@router.callback_query(F.data.startswith("mr_pay:"))
async def handle_pay_click(callback: CallbackQuery):
    plan_key = callback.data.split(":", 1)[1]
    plan = PLANS.get(plan_key)
    if not plan:
        await callback.message.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
        await callback.answer()
        return

    try:
        url = create_payment_link(
            user_id=callback.from_user.id,
            plan_key=plan_key,
            amount=plan["amount"],
            description=SUB_DESC,
            # –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –¥–æ–º–µ–Ω–∞ –º–æ–∂–Ω–æ —è–≤–Ω–æ –ø—Ä–æ–∫–∏–Ω—É—Ç—å URLs:
            # response_url="https://yourapp/thanks",
            # server_callback_url="https://yourapp/fondy/webhook",
        )
        await callback.message.answer(
            f"üí≥ <b>–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏</b>\n"
            f"–¢–∞—Ä–∏—Ñ: {plan['title']}\n"
            f"–°—É–º–º–∞: {plan['amount']:.2f} EUR\n\n"
            f"–ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n{url}",
            parse_mode="HTML"
        )
    except Exception as e:
        await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
    finally:
        await callback.answer()

# ===== –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é =====
@router.message(F.text == "üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def go_back_to_main(message: types.Message):
    from handlers.start import start_handler
    await start_handler(message)
