from aiogram import Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, FSInputFile
from services.progress_tracker import (
    get_achievements,
    get_medal_image,
    get_week_progress
)
from services.progress_report import generate_progress_report

router = Router()

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ ===
@router.message(lambda msg: msg.text == "üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å")
async def show_progress_menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üèÖ –ú–æ–∏ –º–µ–¥–∞–ª–∏"), KeyboardButton(text="üìä –ò—Å—Ç–æ—Ä–∏—è –∑–∞–¥–∞–Ω–∏–π")],
            [KeyboardButton(text="üìÑ –°–∫–∞—á–∞—Ç—å –æ—Ç—á—ë—Ç (PDF)")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    await message.answer(
        "üìà –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–≤–æ–µ–≥–æ –º–∞–ª—ã—à–∞:",
        reply_markup=keyboard
    )

# === –ú–µ–¥–∞–ª–∏ ===
@router.message(lambda msg: msg.text == "üèÖ –ú–æ–∏ –º–µ–¥–∞–ª–∏")
async def medals_handler(message: types.Message):
    result = get_achievements(message.from_user.id)
    if result:
        for medal in result:
            image_path = get_medal_image(medal["medal_name"])
            if image_path:
                await message.answer_photo(
                    FSInputFile(image_path),
                    caption=f"üèÖ {medal['medal_name']}\n{medal['description']}"
                )
            else:
                await message.answer(f"üèÖ {medal['medal_name']}:\n{medal['description']}")
    else:
        await message.answer("üèÖ –ü–æ–∫–∞ –Ω–µ—Ç –º–µ–¥–∞–ª–µ–π. –í—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è!")

# === –ò—Å—Ç–æ—Ä–∏—è –∑–∞–¥–∞–Ω–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é ===
@router.message(lambda msg: msg.text == "üìä –ò—Å—Ç–æ—Ä–∏—è –∑–∞–¥–∞–Ω–∏–π")
async def history_handler(message: types.Message):
    last_week = get_week_progress(message.from_user.id)
    if not last_week:
        await message.answer("üì≠ –¢–∏–º–º–∏ –ø–æ —Ç–µ–±–µ —Å–∫—É—á–∞–µ—Ç... –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ —Ç—ã –µ—â—ë –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª –∑–∞–¥–∞–Ω–∏—è.")
    else:
        text = "\n".join(last_week)
        await message.answer(f"üìò –¢–≤–æ—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:\n\n{text}")

# === –°–∫–∞—á–∏–≤–∞–Ω–∏–µ PDF-–æ—Ç—á—ë—Ç–∞ ===
@router.message(lambda msg: msg.text == "üìÑ –°–∫–∞—á–∞—Ç—å –æ—Ç—á—ë—Ç (PDF)")
async def download_report_handler(message: types.Message):
    path = generate_progress_report(message.from_user.id, message.from_user.first_name)
    if path:
        await message.answer_document(FSInputFile(path), caption="üìÑ –í–æ—Ç —Ç–≤–æ–π PDF-–æ—Ç—á—ë—Ç!")
    else:
        await message.answer("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á—ë—Ç–∞ üòî")

# === –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
@router.message(lambda msg: msg.text == "üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def go_back_to_main(message: types.Message):
    from handlers.start import start_handler
    await start_handler(message)
