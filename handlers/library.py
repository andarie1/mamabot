from aiogram import Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, FSInputFile
from handlers.start import start_handler

router = Router()

@router.message(lambda msg: msg.text == "üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ PDF")
async def show_library_menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìã –ß–µ–∫-–ª–∏—Å—Ç—ã"), KeyboardButton(text="üìñ –ú–∏–Ω–∏-–∫–Ω–∏–≥–∏")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    await message.answer("üìö –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¢–∏–º–º–∏!\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=keyboard)

@router.message(lambda msg: msg.text == "üìã –ß–µ–∫-–ª–∏—Å—Ç—ã")
async def checklist_handler(message: types.Message):
    try:
        pdf_path = "pdfs/checklist_ru_ro.pdf"  # –ø—Ä–∏–º–µ—Ä –ø—É—Ç–∏ –∫ PDF —Å —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ —Ä—É–º—ã–Ω—Å–∫–æ–º
        await message.answer_document(FSInputFile(pdf_path), caption="üìã –í–æ—Ç —Ç–≤–æ–π PDF-—á–µ–∫-–ª–∏—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ —Ä—É–º—ã–Ω—Å–∫–æ–º —è–∑—ã–∫–∞—Ö!")
    except Exception:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ–∫-–ª–∏—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")

@router.message(lambda msg: msg.text == "üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def go_back_to_main(message: types.Message):
    await start_handler(message)
